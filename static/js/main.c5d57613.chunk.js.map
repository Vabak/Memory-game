{"version":3,"sources":["components/Button/Button.module.css","App.module.css","wrappers/PageWrapper/PageWrapper.module.css","assets/img/Miniatures/StartGame@2x.png","assets/img/Miniatures/Group 2@2x.png","components/Logo/Logo.module.css","containers/GameLayout/GameLayout.module.css","components/Card/Card.module.css","wrappers/PageWrapper/PageWrapper.js","components/Logo/Logo.js","components/Button/Button.js","containers/StartPage/StartPage.js","components/Card/Card.js","containers/GameLayout/GameLayout.js","components/Score/Score.js","containers/Game/Game.js","actions/game.js","actions/actionTypes.js","containers/EndPage/EndPage.js","App.js","serviceWorker.js","utility/utility.js","reducers/game.js","index.js"],"names":["module","exports","Button","App","PageWrapper","__webpack_require__","p","Logo","CardLayout","Card","Flip","CardDisabled","Disabled","FrontFace","BackFace","props","react_default","a","createElement","className","styles","children","alt","src","page","StartGameLogo","EndGameLogo","Link","to","link","onClick","clicked","btnContent","StartPage","wrappers_PageWrapper_PageWrapper","components_Logo_Logo","components_Button_Button","cardStyle","isFliped","firstCard","id","secondCard","join","isDisabled","isActive","card","cardPath","GameLayout","cardLayout","deck","map","index","components_Card_Card","key","flipped","Score","score","Game","state","isDeckFlipped","firstFlipedCard","type","secondFlipedCard","cardClickHandler","cardType","_this","checkFlip","restartHandler","createDeck","addDelay","setState","resetScore","this","_this2","setTimeout","_this3","checkPair","_this4","removeCards","checkWin","addScore","subscribeScore","cardsRemain","history","push","components_Score_Score","containers_GameLayout_GameLayout","Component","connect","dispatch","actions","style","margin-bottom","Route","exact","path","component","EndPage","Boolean","window","location","hostname","match","updateObject","oldObject","updatedProperties","Object","objectSpread","initialState","reducer","arguments","length","undefined","action","cardTypes","cardSuits","newDeck","element","Math","floor","random","filter","idx","arr","indexOf","el","array","temporaryValue","randomIndex","currentIndex","randomize","toConsumableArray","remain","newScore","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","app","es","BrowserRouter","basename","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c5d57613.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1m_fF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3mQXg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageWrapper\":\"PageWrapper_PageWrapper__2T1KJ\"};","module.exports = __webpack_public_path__ + \"static/media/StartGame@2x.fa6b4a54.png\";","module.exports = __webpack_public_path__ + \"static/media/Group 2@2x.976f641a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3N9AF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardLayout\":\"GameLayout_CardLayout__1Qw4n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__1M5vB\",\"Flip\":\"Card_Flip__9RnwW\",\"CardDisabled\":\"Card_CardDisabled__1osBf\",\"Disabled\":\"Card_Disabled__2GkLt\",\"FrontFace\":\"Card_FrontFace__2qjoP\",\"BackFace\":\"Card_BackFace__1ohBQ\"};","import React from 'react';\nimport styles from './PageWrapper.module.css';\n\nconst PageWrapper = (props) => \n    (\n        <main className={styles.PageWrapper} >\n            {props.children}\n        </main>\n    )\n\nexport default PageWrapper;","import React from 'react';\nimport StartGameLogo from '../../assets/img/Miniatures/StartGame@2x.png';\nimport EndGameLogo from '../../assets/img/Miniatures/Group 2@2x.png';\nimport styles from './Logo.module.css';\n\nconst Logo = (props) => {\n    return <img className={styles.Logo} alt=\"Logo\" src={props.page === 'start' ? StartGameLogo : EndGameLogo} />\n}\nexport default Logo;","import React from 'react';\nimport styles from './Button.module.css';\n\nimport { Link } from 'react-router-dom'\n\nconst Button = (props) => {\n    return ( \n        <Link className={styles.Button} to={props.link} onClick={props.clicked} >{props.btnContent}</Link>\n    );\n}\n \nexport default Button;","import React from 'react';\nimport PageWrapper from '../../wrappers/PageWrapper/PageWrapper';\nimport Logo from '../../components/Logo/Logo';\nimport Button from '../../components/Button/Button';\n\nconst StartPage = (props) => {\n    return (\n        <PageWrapper>\n            <Logo page='start' />\n            <h1>MEMORY GAME</h1>\n            <Button btnContent='Start' link='/game' />\n        </PageWrapper>\n    );\n}\n\nexport default StartPage;","import React from 'react';\nimport styles from './Card.module.css'\n\nconst cardPath = '/Memory-game/Cards/'\n\nconst Card = (props) => {\n        let cardStyle = styles.Card;\n        if (props.isFliped || props.firstCard === props.id || props.secondCard  === props.id) {\n            cardStyle = [styles.Card, styles.Flip].join(' ');\n            if (props.isDisabled) {\n                cardStyle = [styles.CardDisabled, styles.Flip,].join(' ');\n            }\n             \n        }\n        if (!props.isActive) {\n            cardStyle = styles.Disabled;\n        }\n        return (\n            <div\n                id={props.id} \n                className={cardStyle}\n                onClick={props.isActive ? () => props.clicked(props.id, props.card) : null}>\n                <img\n                    className={styles.FrontFace}\n                    alt=\"Card\" src={cardPath + props.card + '.png'}/>\n                <img\n                    className={styles.BackFace}\n                    alt=\"Card\" src={cardPath + 'BACK.png'}/>\n            </div>\n\n        );\n    }\n\n    export default Card; ","import React from 'react';\n\nimport Card from '../../components/Card/Card';\nimport styles from './GameLayout.module.css';\n\nconst GameLayout = (props) => {\n    const cardLayout = props.deck.map((card, index) => (\n        <Card \n            key={index}\n            isDisabled={props.isDisabled}\n            isActive={card.isActive} \n            card={card.card} \n            id={index}\n            isFliped={props.flipped}\n            clicked={props.clicked}\n            firstCard={props.firstCard}\n            secondCard={props.secondCard}  />\n    ));\n    return (\n        <div className={styles.CardLayout}>\n            {cardLayout}\n        </div>\n\n    );\n\n}\n\nexport default GameLayout;","import React from 'react';\n\nconst Score = (props) => {\n    return (\n        <p>Score: {props.score}</p>\n    );\n}\n \nexport default Score;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport PageWrapper from '../../wrappers/PageWrapper/PageWrapper';\nimport GameLayout from '../GameLayout/GameLayout';\nimport Score from '../../components/Score/Score';\nimport styles from '../../components/Button/Button.module.css'\nimport * as actions from '../../actions/game';\n\n\nclass Game extends Component {\n    state = {\n        isDisabled: true,\n        isDeckFlipped: true,\n        firstFlipedCard: {\n            id: null,\n            type: null,\n        },\n        secondFlipedCard: {\n            id: null,\n            type: null,\n        },\n    }\n    \n    componentWillMount() {\n        this.props.createDeck();\n    }\n\n    componentDidMount() {\n        this.addDelay();\n    }\n\n    addDelay() {\n        this.setState({ isDisabled: true, isDeckFlipped: true })\n        setTimeout(() => this.setState({ isDisabled: false, isDeckFlipped: false }), 5000)\n    }\n\n    cardClickHandler = (id, cardType) => {\n        if (this.state.isDisabled) return;\n        this.checkFlip(id, cardType);\n    }\n\n    checkFlip(id, cardType) {\n        if (this.state.firstFlipedCard.id === null) {\n            this.setState({ firstFlipedCard: { id: id, type: cardType } });\n            return;\n        }\n        if (id === this.state.firstFlipedCard.id) {\n            return;\n        }\n        this.setState({ secondFlipedCard: { id: id, type: cardType } }, () => this.checkPair());\n\n    }\n\n    checkPair() {\n        if (this.state.firstFlipedCard.type === this.state.secondFlipedCard.type) {\n\n            setTimeout(() => {\n                this.props.removeCards(this.state.firstFlipedCard, this.state.secondFlipedCard);\n                this.setState({ firstFlipedCard: { id: null, type: null }, secondFlipedCard: { id: null, type: null } }, () => this.checkWin());\n            }, 300)           \n            this.props.addScore();\n            return;\n        }\n        setTimeout(() => this.setState({ firstFlipedCard: { id: null, type: null }, secondFlipedCard: { id: null, type: null } }), 800)\n        this.props.subscribeScore();\n    }\n\n    checkWin() {\n        if (this.props.cardsRemain === 0) this.props.history.push('/end')\n    }\n\n    restartHandler = () => {\n        this.props.createDeck();\n        this.addDelay();\n        this.setState({ firstFlipedCard: { id: null, type: null }, secondFlipedCard: { id: null, type: null } });\n        this.props.resetScore();\n        \n    }\n\n    render() {\n        return (\n            <PageWrapper>\n                <Score score={this.props.score} />\n                <GameLayout\n                    isDisabled={this.state.isDisabled}\n                    deck={this.props.deck}\n                    flipped={this.state.isDeckFlipped}\n                    clicked={this.cardClickHandler}\n                    firstCard={this.state.firstFlipedCard.id}\n                    secondCard={this.state.secondFlipedCard.id}\n                    score={this.props.score} />\n                <button className={styles.Button} onClick={this.restartHandler}>Restart</button>\n            </PageWrapper>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        createDeck: () => dispatch(actions.createDeck()),\n        removeCards: (firstCard, secondCard) => dispatch(actions.removeCards(firstCard, secondCard)),\n        addScore: () => dispatch(actions.addScore()),\n        subscribeScore: () => dispatch(actions.subscribeScore()),\n        resetScore: () => dispatch(actions.resetScore()),\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        deck: state.deck,\n        score: state.score,\n        cardsRemain: state.cardsRemain,\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","import * as actionTypes from './actionTypes';\n\nexport const createDeck = () => {\n    return {\n        type: actionTypes.CREATE_DECK\n    }\n}\n\nexport const resetScore = () => {\n    return {\n        type: actionTypes.RESET_SCORE\n    }\n}\n\nexport const removeCards = (firstCard, secondCard) => {\n    return {\n        type: actionTypes.REMOVE_CARDS,\n        firstCard: firstCard,\n        secondCard: secondCard\n    }\n}\n\nexport const addScore = () => {\n    return {\n        type: actionTypes.ADD_SCORE\n    }\n}\n\nexport const subscribeScore = () => {\n    return {\n        type: actionTypes.SUBSCRIBE_SCORE\n    }\n}","export const CREATE_DECK = 'CREATE_DECK';\nexport const REMOVE_CARDS = 'REMOVE_CARDS';\nexport const RESET_SCORE = 'RESET_SCORE';\n\nexport const ADD_SCORE = 'ADD_SCORE';\nexport const SUBSCRIBE_SCORE = 'SUBSCTIBE_SCORE';","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport PageWrapper from '../../wrappers/PageWrapper/PageWrapper';\nimport Logo from '../../components/Logo/Logo';\nimport Button from '../../components/Button/Button';\n\nconst EndPage = (props) => {\n    return (\n        <PageWrapper>\n            <Logo />\n            <h2>Congratulations!</h2>\n            <strong style={{\"margin-bottom\": \"10px\"}}>Your score: {props.score}</strong>\n            <Button btnContent='Play again' link='/game' />\n        </PageWrapper>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        score: state.score\n    }\n}\n\nexport default connect(mapStateToProps)(EndPage);","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport styles from './App.module.css';\nimport StartPage from './containers/StartPage/StartPage';\nimport Game from './containers/Game/Game';\nimport EndPage from './containers/EndPage/EndPage';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={styles.App}>\n        <Route exact path=\"/\" component={StartPage}  />\n        <Route path=\"/game\" component={Game} />\n        <Route  path='/end' component={EndPage} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility/utility';\n\nconst initialState = {\n    deck: [],\n    score: 0,\n    cardsRemain: 18,\n}\n\nconst createDeck = (state, action) => {\n    const cardTypes = ['0', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'J', 'K', 'Q'];\n    const cardSuits = ['C', 'D', 'H', 'S'];\n    let newDeck = [];\n    for (; newDeck.length < 9;) {\n        const element = cardTypes[Math.floor(Math.random() * cardTypes.length)] + cardSuits[Math.floor(Math.random() * cardSuits.length)];\n        newDeck.push(element);\n        newDeck = newDeck.filter((card, idx, arr) => arr.indexOf(card) === idx);\n    }\n    let deck = [];\n    newDeck.map(el => {\n        const card = { card: el, isActive: true }\n        deck.push(card);\n    })\n    deck.map(card => deck.push(card));\n    const randomize = (array) => {\n        let currentIndex = array.length, temporaryValue, randomIndex;\n\n        while (0 !== currentIndex) {\n\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    }\n    randomize(deck);\n\n    return updateObject(state, { deck: deck });\n}\n\nconst resetScore = (state, action) => {\n    return updateObject(state, {score: 0, cardsRemain: 18} )\n}\n\nconst removeCards = (state, action) => {\n    let newDeck = [...state.deck];\n    newDeck[action.firstCard.id].isActive = false;\n    newDeck[action.secondCard.id].isActive = false;\n    return updateObject(state, { deck: newDeck })\n}\n\nconst addScore = (state, action) => {\n    let remain = state.cardsRemain;\n    let newScore = state.score;\n    newScore = newScore + (remain * 42);\n    remain -= 2; \n    return updateObject( state, {score: newScore, cardsRemain: remain})\n\n}\n\nconst subscribeScore = (state, action) => {\n    const remain = state.cardsRemain;\n    let newScore = state.score;\n    newScore = newScore - ((18 - remain) * 42);\n    return updateObject( state, {score: newScore})\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.CREATE_DECK: return createDeck(state, action);\n        case actionTypes.REMOVE_CARDS: return removeCards(state, action);\n        case actionTypes.ADD_SCORE: return addScore(state, action);\n        case actionTypes.SUBSCRIBE_SCORE: return subscribeScore(state, action);\n        case actionTypes.RESET_SCORE: return resetScore(state, action);\n        default: return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux';\n\nimport reducer from './reducers/game'\n\nconst store = createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n   );\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter basename=\"/Memory-game/\">\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}